{"version":3,"file":"static/js/983.5c87acec.chunk.js","mappings":"iRAqEA,UA9DiB,WACf,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAClC,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,KAAM,MAAMF,UACrBG,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJC,GAAIC,EAAAA,GACJC,UAAW,SACXC,QAAS,CAAEC,KAAM,EAAGC,GAAI,IACxBC,GAAI,CAAEF,KAAM,GAAIC,GAAI,IAAKV,SAAA,EAEzBF,EAAAA,EAAAA,KAACc,EAAAA,EAAO,CACNC,WAAY,IACZC,SAAU,CAAEL,KAAM,MAAOM,GAAI,MAAOL,GAAI,OACxCM,WAAY,OACZC,UAAU,qEAAoEjB,UAE9EF,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAACb,GAAI,OAAQc,MAAO,WAAWnB,SAAC,iBAKvCF,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAACC,MAAO,WAAWnB,SAAC,kHAKzBF,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CACJgB,UAAW,SACXZ,QAAS,EACTa,MAAO,SACPC,UAAW,SACXC,SAAU,WAAWvB,SAEnBL,GAkBAG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAjBAI,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CAACnB,GAAIoB,EAAAA,GAAMC,GAAG,YAAYC,YAAa,SAAS3B,SAAC,iBAGxDF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CACTF,GAAG,SACHrB,GAAIoB,EAAAA,GACJI,OAAQ,CACNV,MAAO,UAETN,WAAW,OACXM,MAAoB,WAAb1B,EAAwB,SAAW,QAAQO,SACnD,oDAYjB,C,4LChCakB,GAAOY,EAAAA,EAAAA,IAA2B,SAAcC,EAAOC,GAClE,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtC,GACEI,EAAAA,EAAAA,IAAiBJ,GAD8BK,GAAzCC,EAAAA,UAAWhB,EAAAA,MAAOiB,EAAAA,WAAYC,EAAAA,QAAWH,EAAAA,EAAAA,GAAAA,EAAAA,IAG3CI,ECvCR,SAAiBC,GACf,IAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACT,CDgCuBI,CAAQ,CAC3BvC,UAAWwB,EAAMV,MACjB0B,eAAgBhB,EAAMO,WACtBU,cAAejB,EAAMQ,SAGvB,OACE,SAACU,EAAAA,EAAAA,GAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACPlB,IAAAA,EACAK,WAAWc,EAAAA,EAAAA,IAAG,cAAepB,EAAMM,YAC/BG,GACAJ,GAAAA,CAAAA,EAAAA,CACJgB,MAAOnB,IAGb,IAEAf,EAAKmC,YAAc,M,0JEpCNzC,GAAUkB,EAAAA,EAAAA,IAA+B,SACpDC,EACAC,GAEA,IAAMC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAdC,EAAAA,WAAcD,EAAAA,EAAAA,GAAAA,EAAAA,IAEtB,OACE,SAACa,EAAAA,EAAAA,IAASK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACRtB,IAAAA,EACAK,WAAWc,EAAAA,EAAAA,IAAG,iBAAkBpB,EAAMM,YAClCD,GAAAA,CAAAA,EAAAA,CACJgB,MAAOnB,IAGb,IAEArB,EAAQyC,YAAc,S","sources":["pages/HomePage.jsx","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import { Link as ChakraLink } from '@chakra-ui/react';\nimport { Box, Heading, Container, Text, Button, Stack } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { selectAuthAuthenticated } from 'redux/auth.selectors';\n\nconst HomePage = () => {\n  const { pathname } = useLocation();\n  const authenticated = useSelector(selectAuthAuthenticated);\n  return (\n    <>\n      <Container maxW={'3xl'}>\n        <Stack\n          as={Box}\n          textAlign={'center'}\n          spacing={{ base: 8, md: 14 }}\n          py={{ base: 20, md: 36 }}\n        >\n          <Heading\n            fontWeight={600}\n            fontSize={{ base: '2xl', sm: '4xl', md: '6xl' }}\n            lineHeight={'110%'}\n            animation=\"scale-up-center 0.4s cubic-bezier(0.390, 0.575, 0.565, 1.000) both\"\n          >\n            <Text as={'span'} color={'darkblue'}>\n              Phonebook\n            </Text>\n          </Heading>\n\n          <Text color={'gray.500'}>\n            This is the Phone Book Application. You can manage your contacts\n            here. You can add, delete and find contacts\n          </Text>\n\n          <Stack\n            direction={'column'}\n            spacing={3}\n            align={'center'}\n            alignSelf={'center'}\n            position={'relative'}\n          >\n            {!authenticated ? (\n              <>\n                <Button as={Link} to=\"/register\" colorScheme={'orange'}>\n                  Get Started\n                </Button>\n                <ChakraLink\n                  to=\"/login\"\n                  as={Link}\n                  _hover={{\n                    color: 'orange',\n                  }}\n                  fontWeight=\"bold\"\n                  color={pathname === '/login' ? 'orange' : 'black'}\n                >\n                  Login if you already have an account\n                </ChakraLink>\n              </>\n            ) : (\n              <></>\n            )}\n          </Stack>\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["pathname","useLocation","authenticated","useSelector","selectAuthAuthenticated","_jsx","_Fragment","children","Container","maxW","_jsxs","Stack","as","Box","textAlign","spacing","base","md","py","Heading","fontWeight","fontSize","sm","lineHeight","animation","Text","color","direction","align","alignSelf","position","Button","Link","to","colorScheme","ChakraLink","_hover","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textDecoration","textTransform","chakra","p","cx","__css","displayName","h2"],"sourceRoot":""}